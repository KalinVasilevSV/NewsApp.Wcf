//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace News.Website.NewsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleDto", Namespace="http://schemas.datacontract.org/2004/07/News.ApplicationServices.DTOs")]
    [System.SerializableAttribute()]
    public partial class ArticleDto : News.Website.NewsServiceReference.BaseDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbstractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private News.Website.NewsServiceReference.AuthorDto AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PublicationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private News.Website.NewsServiceReference.ArticleTopicDto TopicField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abstract {
            get {
                return this.AbstractField;
            }
            set {
                if ((object.ReferenceEquals(this.AbstractField, value) != true)) {
                    this.AbstractField = value;
                    this.RaisePropertyChanged("Abstract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public News.Website.NewsServiceReference.AuthorDto Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PublicationDate {
            get {
                return this.PublicationDateField;
            }
            set {
                if ((this.PublicationDateField.Equals(value) != true)) {
                    this.PublicationDateField = value;
                    this.RaisePropertyChanged("PublicationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubTitle {
            get {
                return this.SubTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTitleField, value) != true)) {
                    this.SubTitleField = value;
                    this.RaisePropertyChanged("SubTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public News.Website.NewsServiceReference.ArticleTopicDto Topic {
            get {
                return this.TopicField;
            }
            set {
                if ((object.ReferenceEquals(this.TopicField, value) != true)) {
                    this.TopicField = value;
                    this.RaisePropertyChanged("Topic");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseDto", Namespace="http://schemas.datacontract.org/2004/07/News.ApplicationServices.DTOs")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(News.Website.NewsServiceReference.AuthorDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(News.Website.NewsServiceReference.NewsAgencyDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(News.Website.NewsServiceReference.CountryDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(News.Website.NewsServiceReference.ArticleTopicDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(News.Website.NewsServiceReference.PhotoDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(News.Website.NewsServiceReference.PhotoTypeDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(News.Website.NewsServiceReference.ArticleDto))]
    public partial class BaseDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorDto", Namespace="http://schemas.datacontract.org/2004/07/News.ApplicationServices.DTOs")]
    [System.SerializableAttribute()]
    public partial class AuthorDto : News.Website.NewsServiceReference.BaseDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private News.Website.NewsServiceReference.NewsAgencyDto NewsAgencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegisteredOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bio {
            get {
                return this.BioField;
            }
            set {
                if ((object.ReferenceEquals(this.BioField, value) != true)) {
                    this.BioField = value;
                    this.RaisePropertyChanged("Bio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public News.Website.NewsServiceReference.NewsAgencyDto NewsAgency {
            get {
                return this.NewsAgencyField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsAgencyField, value) != true)) {
                    this.NewsAgencyField = value;
                    this.RaisePropertyChanged("NewsAgency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegisteredOn {
            get {
                return this.RegisteredOnField;
            }
            set {
                if ((this.RegisteredOnField.Equals(value) != true)) {
                    this.RegisteredOnField = value;
                    this.RaisePropertyChanged("RegisteredOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tel {
            get {
                return this.TelField;
            }
            set {
                if ((object.ReferenceEquals(this.TelField, value) != true)) {
                    this.TelField = value;
                    this.RaisePropertyChanged("Tel");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsAgencyDto", Namespace="http://schemas.datacontract.org/2004/07/News.ApplicationServices.DTOs")]
    [System.SerializableAttribute()]
    public partial class NewsAgencyDto : News.Website.NewsServiceReference.BaseDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private News.Website.NewsServiceReference.CountryDto CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public News.Website.NewsServiceReference.CountryDto Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tel {
            get {
                return this.TelField;
            }
            set {
                if ((object.ReferenceEquals(this.TelField, value) != true)) {
                    this.TelField = value;
                    this.RaisePropertyChanged("Tel");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryDto", Namespace="http://schemas.datacontract.org/2004/07/News.ApplicationServices.DTOs")]
    [System.SerializableAttribute()]
    public partial class CountryDto : News.Website.NewsServiceReference.BaseDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleTopicDto", Namespace="http://schemas.datacontract.org/2004/07/News.ApplicationServices.DTOs")]
    [System.SerializableAttribute()]
    public partial class ArticleTopicDto : News.Website.NewsServiceReference.BaseDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhotoDto", Namespace="http://schemas.datacontract.org/2004/07/News.ApplicationServices.DTOs")]
    [System.SerializableAttribute()]
    public partial class PhotoDto : News.Website.NewsServiceReference.BaseDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private News.Website.NewsServiceReference.AuthorDto AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PublicationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TakenOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private News.Website.NewsServiceReference.PhotoTypeDto TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public News.Website.NewsServiceReference.AuthorDto Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PublicationDate {
            get {
                return this.PublicationDateField;
            }
            set {
                if ((this.PublicationDateField.Equals(value) != true)) {
                    this.PublicationDateField = value;
                    this.RaisePropertyChanged("PublicationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TakenOn {
            get {
                return this.TakenOnField;
            }
            set {
                if ((this.TakenOnField.Equals(value) != true)) {
                    this.TakenOnField = value;
                    this.RaisePropertyChanged("TakenOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public News.Website.NewsServiceReference.PhotoTypeDto Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhotoTypeDto", Namespace="http://schemas.datacontract.org/2004/07/News.ApplicationServices.DTOs")]
    [System.SerializableAttribute()]
    public partial class PhotoTypeDto : News.Website.NewsServiceReference.BaseDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewsServiceReference.INewsService")]
    public interface INewsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetVersion", ReplyAction="http://tempuri.org/INewsService/GetVersionResponse")]
        string GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetVersion", ReplyAction="http://tempuri.org/INewsService/GetVersionResponse")]
        System.Threading.Tasks.Task<string> GetVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetArticles", ReplyAction="http://tempuri.org/INewsService/GetArticlesResponse")]
        News.Website.NewsServiceReference.ArticleDto[] GetArticles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetArticles", ReplyAction="http://tempuri.org/INewsService/GetArticlesResponse")]
        System.Threading.Tasks.Task<News.Website.NewsServiceReference.ArticleDto[]> GetArticlesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetArticleById", ReplyAction="http://tempuri.org/INewsService/GetArticleByIdResponse")]
        News.Website.NewsServiceReference.ArticleDto GetArticleById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetArticleById", ReplyAction="http://tempuri.org/INewsService/GetArticleByIdResponse")]
        System.Threading.Tasks.Task<News.Website.NewsServiceReference.ArticleDto> GetArticleByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetArticlesByPublicationDate", ReplyAction="http://tempuri.org/INewsService/GetArticlesByPublicationDateResponse")]
        News.Website.NewsServiceReference.ArticleDto[] GetArticlesByPublicationDate(System.DateTime publishedOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetArticlesByPublicationDate", ReplyAction="http://tempuri.org/INewsService/GetArticlesByPublicationDateResponse")]
        System.Threading.Tasks.Task<News.Website.NewsServiceReference.ArticleDto[]> GetArticlesByPublicationDateAsync(System.DateTime publishedOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetArticlesByAuthor", ReplyAction="http://tempuri.org/INewsService/GetArticlesByAuthorResponse")]
        News.Website.NewsServiceReference.ArticleDto[] GetArticlesByAuthor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetArticlesByAuthor", ReplyAction="http://tempuri.org/INewsService/GetArticlesByAuthorResponse")]
        System.Threading.Tasks.Task<News.Website.NewsServiceReference.ArticleDto[]> GetArticlesByAuthorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAuthors", ReplyAction="http://tempuri.org/INewsService/GetAuthorsResponse")]
        News.Website.NewsServiceReference.AuthorDto[] GetAuthors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAuthors", ReplyAction="http://tempuri.org/INewsService/GetAuthorsResponse")]
        System.Threading.Tasks.Task<News.Website.NewsServiceReference.AuthorDto[]> GetAuthorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAuthorById", ReplyAction="http://tempuri.org/INewsService/GetAuthorByIdResponse")]
        News.Website.NewsServiceReference.AuthorDto GetAuthorById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAuthorById", ReplyAction="http://tempuri.org/INewsService/GetAuthorByIdResponse")]
        System.Threading.Tasks.Task<News.Website.NewsServiceReference.AuthorDto> GetAuthorByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAuthorsByFirstName", ReplyAction="http://tempuri.org/INewsService/GetAuthorsByFirstNameResponse")]
        News.Website.NewsServiceReference.AuthorDto[] GetAuthorsByFirstName(string firstName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAuthorsByFirstName", ReplyAction="http://tempuri.org/INewsService/GetAuthorsByFirstNameResponse")]
        System.Threading.Tasks.Task<News.Website.NewsServiceReference.AuthorDto[]> GetAuthorsByFirstNameAsync(string firstName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAuthorsByLastName", ReplyAction="http://tempuri.org/INewsService/GetAuthorsByLastNameResponse")]
        News.Website.NewsServiceReference.AuthorDto[] GetAuthorsByLastName(string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAuthorsByLastName", ReplyAction="http://tempuri.org/INewsService/GetAuthorsByLastNameResponse")]
        System.Threading.Tasks.Task<News.Website.NewsServiceReference.AuthorDto[]> GetAuthorsByLastNameAsync(string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAuthorsByFullName", ReplyAction="http://tempuri.org/INewsService/GetAuthorsByFullNameResponse")]
        News.Website.NewsServiceReference.AuthorDto[] GetAuthorsByFullName(string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAuthorsByFullName", ReplyAction="http://tempuri.org/INewsService/GetAuthorsByFullNameResponse")]
        System.Threading.Tasks.Task<News.Website.NewsServiceReference.AuthorDto[]> GetAuthorsByFullNameAsync(string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAuthorsByNewsAgency", ReplyAction="http://tempuri.org/INewsService/GetAuthorsByNewsAgencyResponse")]
        News.Website.NewsServiceReference.AuthorDto[] GetAuthorsByNewsAgency(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAuthorsByNewsAgency", ReplyAction="http://tempuri.org/INewsService/GetAuthorsByNewsAgencyResponse")]
        System.Threading.Tasks.Task<News.Website.NewsServiceReference.AuthorDto[]> GetAuthorsByNewsAgencyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetPhotos", ReplyAction="http://tempuri.org/INewsService/GetPhotosResponse")]
        News.Website.NewsServiceReference.PhotoDto[] GetPhotos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetPhotos", ReplyAction="http://tempuri.org/INewsService/GetPhotosResponse")]
        System.Threading.Tasks.Task<News.Website.NewsServiceReference.PhotoDto[]> GetPhotosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetPhotoById", ReplyAction="http://tempuri.org/INewsService/GetPhotoByIdResponse")]
        News.Website.NewsServiceReference.PhotoDto GetPhotoById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetPhotoById", ReplyAction="http://tempuri.org/INewsService/GetPhotoByIdResponse")]
        System.Threading.Tasks.Task<News.Website.NewsServiceReference.PhotoDto> GetPhotoByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetPhotosByPublicationDate", ReplyAction="http://tempuri.org/INewsService/GetPhotosByPublicationDateResponse")]
        News.Website.NewsServiceReference.PhotoDto[] GetPhotosByPublicationDate(System.DateTime publishedOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetPhotosByPublicationDate", ReplyAction="http://tempuri.org/INewsService/GetPhotosByPublicationDateResponse")]
        System.Threading.Tasks.Task<News.Website.NewsServiceReference.PhotoDto[]> GetPhotosByPublicationDateAsync(System.DateTime publishedOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetPhotosByAuthor", ReplyAction="http://tempuri.org/INewsService/GetPhotosByAuthorResponse")]
        News.Website.NewsServiceReference.PhotoDto[] GetPhotosByAuthor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetPhotosByAuthor", ReplyAction="http://tempuri.org/INewsService/GetPhotosByAuthorResponse")]
        System.Threading.Tasks.Task<News.Website.NewsServiceReference.PhotoDto[]> GetPhotosByAuthorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsAgencies", ReplyAction="http://tempuri.org/INewsService/GetNewsAgenciesResponse")]
        News.Website.NewsServiceReference.NewsAgencyDto[] GetNewsAgencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsAgencies", ReplyAction="http://tempuri.org/INewsService/GetNewsAgenciesResponse")]
        System.Threading.Tasks.Task<News.Website.NewsServiceReference.NewsAgencyDto[]> GetNewsAgenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsAgencyById", ReplyAction="http://tempuri.org/INewsService/GetNewsAgencyByIdResponse")]
        News.Website.NewsServiceReference.NewsAgencyDto GetNewsAgencyById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsAgencyById", ReplyAction="http://tempuri.org/INewsService/GetNewsAgencyByIdResponse")]
        System.Threading.Tasks.Task<News.Website.NewsServiceReference.NewsAgencyDto> GetNewsAgencyByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsServiceChannel : News.Website.NewsServiceReference.INewsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsServiceClient : System.ServiceModel.ClientBase<News.Website.NewsServiceReference.INewsService>, News.Website.NewsServiceReference.INewsService {
        
        public NewsServiceClient() {
        }
        
        public NewsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetVersion() {
            return base.Channel.GetVersion();
        }
        
        public System.Threading.Tasks.Task<string> GetVersionAsync() {
            return base.Channel.GetVersionAsync();
        }
        
        public News.Website.NewsServiceReference.ArticleDto[] GetArticles() {
            return base.Channel.GetArticles();
        }
        
        public System.Threading.Tasks.Task<News.Website.NewsServiceReference.ArticleDto[]> GetArticlesAsync() {
            return base.Channel.GetArticlesAsync();
        }
        
        public News.Website.NewsServiceReference.ArticleDto GetArticleById(int id) {
            return base.Channel.GetArticleById(id);
        }
        
        public System.Threading.Tasks.Task<News.Website.NewsServiceReference.ArticleDto> GetArticleByIdAsync(int id) {
            return base.Channel.GetArticleByIdAsync(id);
        }
        
        public News.Website.NewsServiceReference.ArticleDto[] GetArticlesByPublicationDate(System.DateTime publishedOn) {
            return base.Channel.GetArticlesByPublicationDate(publishedOn);
        }
        
        public System.Threading.Tasks.Task<News.Website.NewsServiceReference.ArticleDto[]> GetArticlesByPublicationDateAsync(System.DateTime publishedOn) {
            return base.Channel.GetArticlesByPublicationDateAsync(publishedOn);
        }
        
        public News.Website.NewsServiceReference.ArticleDto[] GetArticlesByAuthor(int id) {
            return base.Channel.GetArticlesByAuthor(id);
        }
        
        public System.Threading.Tasks.Task<News.Website.NewsServiceReference.ArticleDto[]> GetArticlesByAuthorAsync(int id) {
            return base.Channel.GetArticlesByAuthorAsync(id);
        }
        
        public News.Website.NewsServiceReference.AuthorDto[] GetAuthors() {
            return base.Channel.GetAuthors();
        }
        
        public System.Threading.Tasks.Task<News.Website.NewsServiceReference.AuthorDto[]> GetAuthorsAsync() {
            return base.Channel.GetAuthorsAsync();
        }
        
        public News.Website.NewsServiceReference.AuthorDto GetAuthorById(int id) {
            return base.Channel.GetAuthorById(id);
        }
        
        public System.Threading.Tasks.Task<News.Website.NewsServiceReference.AuthorDto> GetAuthorByIdAsync(int id) {
            return base.Channel.GetAuthorByIdAsync(id);
        }
        
        public News.Website.NewsServiceReference.AuthorDto[] GetAuthorsByFirstName(string firstName) {
            return base.Channel.GetAuthorsByFirstName(firstName);
        }
        
        public System.Threading.Tasks.Task<News.Website.NewsServiceReference.AuthorDto[]> GetAuthorsByFirstNameAsync(string firstName) {
            return base.Channel.GetAuthorsByFirstNameAsync(firstName);
        }
        
        public News.Website.NewsServiceReference.AuthorDto[] GetAuthorsByLastName(string lastName) {
            return base.Channel.GetAuthorsByLastName(lastName);
        }
        
        public System.Threading.Tasks.Task<News.Website.NewsServiceReference.AuthorDto[]> GetAuthorsByLastNameAsync(string lastName) {
            return base.Channel.GetAuthorsByLastNameAsync(lastName);
        }
        
        public News.Website.NewsServiceReference.AuthorDto[] GetAuthorsByFullName(string firstName, string lastName) {
            return base.Channel.GetAuthorsByFullName(firstName, lastName);
        }
        
        public System.Threading.Tasks.Task<News.Website.NewsServiceReference.AuthorDto[]> GetAuthorsByFullNameAsync(string firstName, string lastName) {
            return base.Channel.GetAuthorsByFullNameAsync(firstName, lastName);
        }
        
        public News.Website.NewsServiceReference.AuthorDto[] GetAuthorsByNewsAgency(int id) {
            return base.Channel.GetAuthorsByNewsAgency(id);
        }
        
        public System.Threading.Tasks.Task<News.Website.NewsServiceReference.AuthorDto[]> GetAuthorsByNewsAgencyAsync(int id) {
            return base.Channel.GetAuthorsByNewsAgencyAsync(id);
        }
        
        public News.Website.NewsServiceReference.PhotoDto[] GetPhotos() {
            return base.Channel.GetPhotos();
        }
        
        public System.Threading.Tasks.Task<News.Website.NewsServiceReference.PhotoDto[]> GetPhotosAsync() {
            return base.Channel.GetPhotosAsync();
        }
        
        public News.Website.NewsServiceReference.PhotoDto GetPhotoById(int id) {
            return base.Channel.GetPhotoById(id);
        }
        
        public System.Threading.Tasks.Task<News.Website.NewsServiceReference.PhotoDto> GetPhotoByIdAsync(int id) {
            return base.Channel.GetPhotoByIdAsync(id);
        }
        
        public News.Website.NewsServiceReference.PhotoDto[] GetPhotosByPublicationDate(System.DateTime publishedOn) {
            return base.Channel.GetPhotosByPublicationDate(publishedOn);
        }
        
        public System.Threading.Tasks.Task<News.Website.NewsServiceReference.PhotoDto[]> GetPhotosByPublicationDateAsync(System.DateTime publishedOn) {
            return base.Channel.GetPhotosByPublicationDateAsync(publishedOn);
        }
        
        public News.Website.NewsServiceReference.PhotoDto[] GetPhotosByAuthor(int id) {
            return base.Channel.GetPhotosByAuthor(id);
        }
        
        public System.Threading.Tasks.Task<News.Website.NewsServiceReference.PhotoDto[]> GetPhotosByAuthorAsync(int id) {
            return base.Channel.GetPhotosByAuthorAsync(id);
        }
        
        public News.Website.NewsServiceReference.NewsAgencyDto[] GetNewsAgencies() {
            return base.Channel.GetNewsAgencies();
        }
        
        public System.Threading.Tasks.Task<News.Website.NewsServiceReference.NewsAgencyDto[]> GetNewsAgenciesAsync() {
            return base.Channel.GetNewsAgenciesAsync();
        }
        
        public News.Website.NewsServiceReference.NewsAgencyDto GetNewsAgencyById(int id) {
            return base.Channel.GetNewsAgencyById(id);
        }
        
        public System.Threading.Tasks.Task<News.Website.NewsServiceReference.NewsAgencyDto> GetNewsAgencyByIdAsync(int id) {
            return base.Channel.GetNewsAgencyByIdAsync(id);
        }
    }
}
